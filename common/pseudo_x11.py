#!/usr/bin/python3
#----------------------------------------------------------------------------------------------------------------------
import struct
import sys
import os
import socket
import namedlist
#----------------------------------------------------------------------------------------------------------------------
LIST_FONTS_REPLY_1 = '/docker/X11_ListFonts_reply-00be.list'
LIST_FONTS_REPLY_2 = '/docker/X11_ListFonts_reply-00bf.list'
EXT_XKEYBOARD = 0x88
EXT_XFIXES = 0x8c
EXT_RENDER = 0x8d
PARENT_WINDOW_ID = 0x00000111
#----------------------------------------------------------------------------------------------------------------------
X11_SOCK_PATH = '/tmp/.X11-unix/X%s' % sys.argv[1]
#----------------------------------------------------------------------------------------------------------------------
def align4(length):
    return (length + 3) // 4 * 4
#----------------------------------------------------------------------------------------------------------------------
def pad4(data):
    return data + b'\x00' * (align4(len(data)) - len(data))
#----------------------------------------------------------------------------------------------------------------------
def buildNamedList(className, args):
    return namedlist.namedlist(className, ' '.join(args.keys()))(*args.values())
#----------------------------------------------------------------------------------------------------------------------
def buildFontList(fileName):
    with open(fileName, 'r') as inFile:
        lines = [x.strip() for x in inFile]

    buf = bytearray()
    for line in lines:
        buf.append(len(line))
        buf.extend(line.encode('utf-8'))

    return (len(lines), pad4(buf))
#----------------------------------------------------------------------------------------------------------------------
def uniPipe(prompt, sc, ss, sd):
    stateActions = {}
    stateArgs = ()
    #------------------------------------------------------------------------------------------------------------------
    def sendToSrc(out):
        ss.sock.sendall(out)
    #------------------------------------------------------------------------------------------------------------------
    def dumpHex(prefix, data):
        for i in range(0, len(data), 16):
            hexStr = ''
            chrStr = ''
            for j in range(i, i + 16):
                if j < len(data):
                    if j == i + 8: hexStr += '-'
                    elif j > i: hexStr += ' '
                    hexStr += '%02x' % (data[j] & 0xff)
                    chrStr += '%c' % (data[j] if data[j] >= 0x20 and data[j] <= 0x7e else '.')
                else:
                    hexStr += '   '
            print('%s %s%s  %s' % (prompt, prefix, hexStr, chrStr))
        sys.stdout.flush()
    #------------------------------------------------------------------------------------------------------------------
    def onReceive():
        nonlocal stateArgs
        readBuf = ss.sock.recv(4096)
        if not readBuf: return False
        readPtr = 0
        while readPtr < len(readBuf):
            chunkLen = stateActions[ss.state](readBuf[readPtr:], *stateArgs)
            readPtr += chunkLen
        return True
    #------------------------------------------------------------------------------------------------------------------
    def onStateBypass(readBuf, *ignored):
        dumpHex('', readBuf)
        return len(readBuf)
    #------------------------------------------------------------------------------------------------------------------
    def onStateWaitAllowData(readBuf, *ignored):
        if readBuf: ss.state = sd.state = 'BYPASS'
        return 0
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientInit(readBuf):
        nonlocal stateArgs
        ss.state = 'CLIENT_CONN_SETUP'
        stateArgs = ([12], bytearray())
        return 0
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientConnSetup(readBuf, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen[0] - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen[0]: return chunkLen

        if pktLen[0] == 12:
            if pkt[0] == 0x42: sc.endian = '>'
            elif pkt[0] == 0x6c: sc.endian = '<'
            else: return chunkLen

            majorVer, minorVer, authNameLen, authDataLen = struct.unpack_from(sc.endian + 'HHHH', pkt[2:10])

            if majorVer != 11 or minorVer != 0:
                ss.state = 'BYPASS'
                return chunkLen

            pktLen[0] += align4(authNameLen) + align4(authDataLen)
            if len(pkt) < pktLen[0]: return chunkLen

        majorVer, minorVer, authNameLen, authDataLen = struct.unpack_from(sc.endian + 'HHHH', pkt[2:10])
        pos = 12
        authName = pkt[pos:pos+authNameLen].decode('utf-8')
        pos += align4(authNameLen)
        authData = ''.join('%02x' % b for b in pkt[pos:pos+authDataLen])
        print('%s SETUP version %d.%d, NAME %s, AUTH %s' % (prompt, majorVer, minorVer, authName, authData))

        reply = bytes([                                     0x60, 0x1d, 0xb4, 0x00, 0x00, 0x00, 0x60, 0x00,
            0xff, 0xff, 0x1f, 0x00, 0x00, 0x01, 0x00, 0x00, 0x14, 0x00, 0xff, 0xff, 0x01, 0x07, 0x00, 0x00,
            0x20, 0x20, 0x08, 0xff, 0x00, 0x00, 0x00, 0x00, 0x54, 0x68, 0x65, 0x20, 0x58, 0x2e, 0x4f, 0x72,
            0x67, 0x20, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x01, 0x01, 0x20, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x04, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x20, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x20, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x18, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x20, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x90, 0x06, 0x04, 0x04, 0xbd, 0x01, 0x10, 0x01,
            0x01, 0x00, 0x01, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x07, 0x18, 0x00, 0x50, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc9, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xce, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xd6, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdb, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xde, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xe2, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe9, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xee, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xef, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x0a, 0x01, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00,
            0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x00,
            0x04, 0x08, 0x00, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00
        ])

        reply = struct.pack(sc.endian + 'BBHHH', 1, 0, 11, 0, len(reply) // 4) + reply
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqHeader(readBuf, pkt):
        nonlocal stateArgs

        if len(pkt) == 0 and len(readBuf) > 0: sc.seqNo = (sc.seqNo + 1) % 0x10000
        chunkLen = min(4 - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < 4: return chunkLen

        opcode, extra, l = struct.unpack_from(sc.endian + 'BBH', pkt)
        if l < 1: 
            ss.state = 'BYPASS'
            return chunkLen
            
        ss.state = 'CLIENT_REQ'
        stateArgs = (opcode, extra, l * 4, pkt)
        return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReq(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        if opcode == 1:
            ss.state = 'CLIENT_REQ_CREATE_WINDOW'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 2:
            ss.state = 'CLIENT_REQ_CHANGE_WINDOW_ATTRIBUTES'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 12:
            print('%s REQUEST[%04x] %d ConfigureWindow [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 16:
            ss.state = 'CLIENT_REQ_INTERN_ATOM'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 18:
            print('%s REQUEST[%04x] %d ChangeProperty [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 20:
            ss.state = 'CLIENT_REQ_GET_PROPERTY'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 22:
            print('%s REQUEST[%04x] %d SetSelectionOwner [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 43:
            ss.state = 'CLIENT_REQ_GET_INPUT_FOCUS'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 45:
            print('%s REQUEST[%04x] %d OpenFont [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 49:
            ss.state = 'CLIENT_REQ_LIST_FONTS'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 53:
            print('%s REQUEST[%04x] %d CreatePixmap [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 54:
            print('%s REQUEST[%04x] %d FreePixmap [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 55:
            print('%s REQUEST[%04x] %d CreateGC [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 56:
            print('%s REQUEST[%04x] %d ChangeGC [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 60:
            print('%s REQUEST[%04x] %d FreeGC [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 61:
            print('%s REQUEST[%04x] %d ClearArea [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 70:
            print('%s REQUEST[%04x] %d PolyFillRectangle [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 72:
            print('%s REQUEST[%04x] %d PutImage [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 78:
            print('%s REQUEST[%04x] %d CreateColormap [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 84:
            ss.state = 'CLIENT_REQ_ALLOC_COLOR'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 91:
            ss.state = 'CLIENT_REQ_QUERY_COLORS'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 93:
            print('%s REQUEST[%04x] %d CreateCursor [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == 98:
            ss.state = 'CLIENT_REQ_QUERY_EXTENSION'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 101:
            ss.state = 'CLIENT_REQ_GET_KEYBOARD_MAPPING'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 117:
            ss.state = 'CLIENT_REQ_GET_POINTER_MAPPING'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 119:
            ss.state = 'CLIENT_REQ_GET_MODIFIER_MAPPING'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == 127:
            print('%s REQUEST[%04x] %d NoOperation [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], None)

        elif opcode == EXT_XKEYBOARD:
            ss.state = 'CLIENT_REQ_EXT_XKEYBOARD'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == EXT_XFIXES:
            ss.state = 'CLIENT_REQ_EXT_XFIXES'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif opcode == EXT_RENDER:
            ss.state = 'CLIENT_REQ_EXT_RENDER'
            stateArgs = (opcode, extra, pktLen, pkt)

        else:
            print('%s REQUEST[%04x] %d ??? [%d]' % (prompt, sc.seqNo, opcode, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)

        return stateActions[ss.state](readBuf, *stateArgs)
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqDump(readBuf, opcode, extra, pktLen, pktPos, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - pktPos[0], len(readBuf))

        if pkt:
            dumpHex('', (pkt if pktPos[0] == len(pkt) else b'') + readBuf[:chunkLen])

        pktPos[0] += chunkLen
        if pktPos[0] < pktLen: return chunkLen

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqCreateWindow(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 32:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        wid, parent, x, y, width, height, borderWidth, cls, visual, valueMask = struct.unpack_from(sc.endian + 'LLHHHHHHLL', pkt[4:32])
        sc.windowIDs.add(wid)

        print('%s REQUEST[%04x] %d CreateWindow -- window: 0x%08x, parent: 0x%08x, (%d,%d)x(%d,%d), borderWidth: %d, class: 0x%04x, visual: 0x%08x, valueMask: 0x%08x' % (prompt, sc.seqNo, opcode, wid, parent, x, y, width, height, borderWidth, cls, visual, valueMask))

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqChangeWindowAttributes(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 12:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        window, valueMask = struct.unpack_from(sc.endian + 'LL', pkt[4:12])
        print('%s REQUEST[%04x] %d ChangeWindowAttributes -- window: 0x%08x, valueMask: 0x%08x' % (prompt, sc.seqNo, opcode, window, valueMask))

        if window in sc.windowIDs: pass
        else:
            reply = struct.pack(sc.endian + 'BBHLHBBLLLLL', 0, 10, sc.seqNo, window, 0, opcode, 0, 0, 0, 0, 0, 0)
            dumpHex('    <<<--- REPLY ', reply)
            sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqInternAtom(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 8:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        nameLen = struct.unpack_from(sc.endian + 'H', pkt[4:6])[0]
        if pktLen < 8 + nameLen:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        name = pkt[8:8+nameLen].decode('utf-8')

        if name in atomMap:
            print('%s REQUEST[%04x] %d InternAtom -- %s' % (prompt, sc.seqNo, opcode, name))
            reply = struct.pack(sc.endian + 'BBHLLLLLLL', 1, 0, sc.seqNo, 0, atomMap[name], 0, 0, 0, 0, 0)
            dumpHex('    <<<--- REPLY ', reply)
            sendToSrc(reply)
        else:
            print('%s REQUEST[%04x] %d InternAtom -- %s (UNKNOWN)' % (prompt, sc.seqNo, opcode, name))

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqGetProperty(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 24:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        win, prop, typ, longOff, longLen = struct.unpack_from(sc.endian + 'LLLLL', pkt[4:24])
        print('%s REQUEST[%04x] %d GetProperty -- delete: %d, W 0x%08x, P 0x%08x, T 0x%08x, Off 0x%08x, Len 0x%08x' % (prompt, sc.seqNo, opcode, extra, win, prop, typ, longOff, longLen))

        if win == PARENT_WINDOW_ID and prop == atomMap['_XKB_RULES_NAMES']:
            data = b'base\x00empty\x00empty\x00\x00\x00'
            pad4Data = pad4(data)
            reply = struct.pack(sc.endian + 'BBHLLLLLLL', 1, 8, sc.seqNo, len(pad4Data) // 4, 0x1f, 0, len(data), 0, 0, 0) + pad4Data
        else:
            reply = struct.pack(sc.endian + 'BBHLLLLLLL', 1, 0, sc.seqNo, 0, 0, 0, 0, 0, 0, 0)

        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqGetInputFocus(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        print('%s REQUEST[%04x] %d GetInputFocus' % (prompt, sc.seqNo, opcode))

        reply = struct.pack(sc.endian + 'BBHLLLLLLL', 1, 0, sc.seqNo, 0, 0, 0, 0, 0, 0, 0)
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqListFonts(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 8:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        maxNames, lengthOfPattern = struct.unpack_from(sc.endian + 'HH', pkt[4:8])

        if pktLen < 8 + lengthOfPattern:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        pattern = pkt[8:8+lengthOfPattern].decode('utf-8')
        print('%s REQUEST[%04x] %d ListFonts -- maxNames: %d, pattern: %s' % (prompt, sc.seqNo, opcode, maxNames, pattern))

        if pattern == '*':
            lineCnt, data = buildFontList(LIST_FONTS_REPLY_1)
            reply = struct.pack(sc.endian + 'BBHLHHLLLLL', 1, 0, sc.seqNo, len(data) // 4, lineCnt, 0, 0, 0, 0, 0, 0) + data
            dumpHex('    <<<--- REPLY ', reply[:32])
            sendToSrc(reply)

        elif pattern == '-*-*-*-*-*-*-*-*-*-*-*-*-*-*':
            lineCnt, data = buildFontList(LIST_FONTS_REPLY_2)
            reply = struct.pack(sc.endian + 'BBHLHHLLLLL', 1, 0, sc.seqNo, len(data) // 4, lineCnt, 0, 0, 0, 0, 0, 0) + data
            dumpHex('    <<<--- REPLY ', reply[:32])
            sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqAllocColor(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 16:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        cmap, red, green, blue = struct.unpack_from(sc.endian + 'LHHH', pkt[4:14])
        print('%s REQUEST[%04x] %d AllocColor -- CMAP 0x%08x, RGB #%02x%02x%02x' % (prompt, sc.seqNo, opcode, cmap, red, green, blue))

        reply = struct.pack(sc.endian + 'BBHLHHHHLLLL', 1, 0, sc.seqNo, 0, red, green, blue, 0, ((red << 8) & 0xff0000) | (green & 0xff00) | ((blue >> 8) & 0xff), 0, 0, 0)
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqQueryColors(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        cmap = struct.unpack_from(sc.endian + 'L', pkt[4:8])[0]
        n = (pktLen - 8) // 4

        print('%s REQUEST[%04x] %d QueryColors -- CMAP 0x%08x, N %d' % (prompt, sc.seqNo, opcode, cmap, n))

        reply = bytearray()
        for i in range(0, n):
            r, g, b = struct.unpack_from(sc.endian + 'BBB', pkt[i*4+8:i*4+11])
            reply.extend(struct.pack(sc.endian + 'HHHH', r * 0x101, g * 0x101, b * 0x101, 0))

        reply = struct.pack(sc.endian + 'BBHLHHLLLLL', 1, 0, sc.seqNo, len(reply) // 4, n, 0, 0, 0, 0, 0, 0) + reply
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqQueryExtension(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 8:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        nameLen = struct.unpack_from(sc.endian + 'H', pkt[4:6])[0]
        if pktLen < 8 + nameLen:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        name = pkt[8:8+nameLen].decode('utf-8')
        print('%s REQUEST[%04x] %d QueryExtension -- %s' % (prompt, sc.seqNo, opcode, name))

        if name == 'XKEYBOARD':
            reply = struct.pack(sc.endian + 'BBHLBBBBLLLLL', 1, 0, sc.seqNo, 0, 1, EXT_XKEYBOARD, 0x5c, 0x8d, 0, 0, 0, 0, 0)
        elif name == 'XFIXES':
            reply = struct.pack(sc.endian + 'BBHLBBBBLLLLL', 1, 0, sc.seqNo, 0, 1, EXT_XFIXES, 0x5e, 0x90, 0, 0, 0, 0, 0)
        elif name == 'RENDER':
            reply = struct.pack(sc.endian + 'BBHLBBBBLLLLL', 1, 0, sc.seqNo, 0, 1, EXT_RENDER, 0, 0x92, 0, 0, 0, 0, 0)
        else:
            reply = struct.pack(sc.endian + 'BBHLBBBBLLLLL', 1, 0, sc.seqNo, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqGetKeyboardMapping(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 8:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        firstKeycode, count = struct.unpack_from(sc.endian + 'BB', pkt[4:6])
        print('%s REQUEST[%04x] %d GetKeyboardMapping -- keycodes: %d[%d]' % (prompt, sc.seqNo, opcode, firstKeycode, count))

        reply = bytes([
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x73, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00,
            0x64, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0xef, 0x08, 0x00, 0x00, 0xce, 0x00, 0x00, 0x00,
            0x66, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0xf6, 0x08, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00,
            0x68, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0xff, 0x01, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00,
            0x67, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xbd, 0x01, 0x00, 0x00,
            0x7a, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0xd9, 0x07, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00,
            0x78, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x48, 0x22, 0x00, 0x01, 0xb2, 0x01, 0x00, 0x00,
            0x63, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00,
            0x76, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0xd6, 0x08, 0x00, 0x00, 0xca, 0x25, 0x00, 0x01,
            0xa7, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00,
            0x62, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0xbf, 0x08, 0x00, 0x00, 0xb9, 0x02, 0x00, 0x00,
            0x71, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0xbd, 0x13, 0x00, 0x00, 0xbc, 0x13, 0x00, 0x00,
            0x77, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x11, 0x22, 0x00, 0x01, 0xfe, 0x0a, 0x00, 0x00,
            0x65, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x51, 0xfe, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00,
            0x72, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x30, 0x20, 0x00, 0x01,
            0x79, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00,
            0x74, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0xf1, 0x0a, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00,
            0x31, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x44, 0x20, 0x00, 0x01,
            0x32, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0xc9, 0x0a, 0x00, 0x00, 0xac, 0x20, 0x00, 0x00,
            0x33, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x39, 0x20, 0x00, 0x01,
            0x34, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 0x3a, 0x20, 0x00, 0x01,
            0x36, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x02, 0xfb, 0x00, 0x01,
            0x35, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0xc2, 0x08, 0x00, 0x00, 0x01, 0xfb, 0x00, 0x01,
            0x3d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0xbd, 0x08, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00,
            0x39, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00,
            0x37, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0xf2, 0x0a, 0x00, 0x00,
            0x2d, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0xaa, 0x0a, 0x00, 0x00, 0xa9, 0x0a, 0x00, 0x00,
            0x38, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00,
            0x30, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0xfd, 0x0a, 0x00, 0x00,
            0x5d, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0xd0, 0x0a, 0x00, 0x00, 0xd1, 0x0a, 0x00, 0x00,
            0x6f, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00,
            0x75, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x57, 0xfe, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
            0x5b, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0xd2, 0x0a, 0x00, 0x00, 0xd3, 0x0a, 0x00, 0x00,
            0x69, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x52, 0xfe, 0x00, 0x00, 0xc6, 0x02, 0x00, 0x01,
            0x70, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x00, 0x00, 0x0f, 0x22, 0x00, 0x01,
            0x0d, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x6c, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00,
            0x6a, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x06, 0x22, 0x00, 0x01, 0xd4, 0x00, 0x00, 0x00,
            0x27, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00,
            0x6b, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0xda, 0x02, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x01,
            0x3b, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0xae, 0x0a, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00,
            0x5c, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00,
            0x2c, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xbc, 0x08, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00,
            0x2f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00,
            0x6e, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x53, 0xfe, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x01,
            0x6d, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00,
            0x2e, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xbe, 0x08, 0x00, 0x00, 0xa2, 0x01, 0x00, 0x00,
            0x09, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x60, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x50, 0xfe, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
            0x08, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x1b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xe7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xe1, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe1, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xe5, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe5, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xe9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xe3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xe2, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe2, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xea, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xea, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xe4, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe4, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xe8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xae, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xae, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xaa, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xab, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xab, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x1b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xaf, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x8d, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8d, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xad, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xad, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xbd, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbd, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xb0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xb1, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb1, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xb2, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xb3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xb4, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xb5, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb5, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xb6, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb6, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xb7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xb8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xb9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xc2, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc2, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xc3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xc4, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xc0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xc5, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc5, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xc6, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xc8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xca, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xca, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xcb, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcb, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xc7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xc9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xcc, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x6a, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x50, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x55, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xc1, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc1, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x57, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xbf, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x56, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xbe, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbe, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x51, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x53, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x54, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x52, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ])

        for i in range(len(reply) // 16, count):
            reply += bytes([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])

        reply = struct.pack(sc.endian + 'BBHLLLLLLL', 1, 4, sc.seqNo, len(reply) // 4, 0, 0, 0, 0, 0, 0) + reply
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqGetPointerMapping(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        print('%s REQUEST[%04x] %d GetPointerMapping' % (prompt, sc.seqNo, opcode))

        data = bytes([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
        pad4Data = pad4(data)
        reply = struct.pack(sc.endian + 'BBHLLLLLLL', 1, len(data), sc.seqNo, len(pad4Data) // 4, 0, 0, 0, 0, 0, 0) + pad4Data
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqGetModifierMapping(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        print('%s REQUEST[%04x] %d GetModifierMapping' % (prompt, sc.seqNo, opcode))

        reply = bytes([0x40, 0x44, 0x41, 0x00, 0x43, 0x46, 0x42, 0x45, 0x3f, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])
        reply = struct.pack(sc.endian + 'BBHLLLLLLL', 1, 2, sc.seqNo, len(reply) // 4, 0, 0, 0, 0, 0, 0) + reply
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtXKeyboard(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        if extra == 0:
            ss.state = 'CLIENT_REQ_EXT_XKEYBOARD_USE_EXTENSION'

        elif extra == 1:
            ss.state = 'CLIENT_REQ_EXT_XKEYBOARD_SELECT_EVENTS'

        elif extra == 6:
            ss.state = 'CLIENT_REQ_EXT_XKEYBOARD_GET_CONTROLS'

        elif extra == 8:
            ss.state = 'CLIENT_REQ_EXT_XKEYBOARD_GET_MAP'

        elif extra == 23:
            ss.state = 'CLIENT_REQ_EXT_XKEYBOARD_GET_KBD_BY_NAME'

        else:
            print('%s REQUEST[%04x] %d [E] XKEYBOARD:%d [%d]' % (prompt, sc.seqNo, opcode, extra, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)

        return stateActions[ss.state](readBuf, *stateArgs)
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtXKeyboardUseExtension(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 8:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        wantedMajor, wantedMinor = struct.unpack_from(sc.endian + 'HH', pkt[4:8])
        print('%s REQUEST[%04x] %d [E] XKEYBOARD:XkbUseExtension -- Wanted version 0x%04x:0x%04x' % (prompt, sc.seqNo, opcode, wantedMajor, wantedMinor))

        reply = struct.pack(sc.endian + 'BBHLHHLLLLL', 1, 1, sc.seqNo, 0, wantedMajor, wantedMinor, 0, 0, 0, 0, 0)
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtXKeyboardSelectEvents(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 16:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        deviceSpec, affectWhich, clear, selectAll, affectMap, map = struct.unpack_from(sc.endian + 'HHHHHH', pkt[4:16])

        print('%s REQUEST[%04x] %d [E] XKEYBOARD:XkbSelectEvents -- deviceSpec: 0x%04x, affectWhich: 0x%04x, clear: 0x%04x, selectAll: 0x%04x, affectMap: 0x%04x' % (prompt, sc.seqNo, opcode, deviceSpec, affectWhich, clear, selectAll, affectMap))

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtXKeyboardGetControls(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 8:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        deviceSpec, = struct.unpack_from(sc.endian + 'H', pkt[4:6])
        print('%s REQUEST[%04x] %d [E] XKEYBOARD:XkbGetControls -- deviceSpec: 0x%04x' % (prompt, sc.seqNo, opcode, deviceSpec))

        reply = struct.pack(sc.endian + 'BBHLBBBBBBBBHHHHHHHHHHHHHHHHLLLLLLLLLLL', 1, 3, sc.seqNo, 15, 1, 2, 1, 0, 0, 0, 0, 0, 0x0000, 0x0000, 0x020d, 0x005a, 0x012c, 0x012c, 0x00a0, 0x0028, 0x001e, 0x001e, 0x01f4, 0x0cef, 0x0078, 0x0001, 0x0000, 0, 0x0000001e, 0x00000000, 0x000013a1, 0xffffffff, 0x7fffffff, 0xffffff00, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff)

        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtXKeyboardGetMap(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 28:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        deviceSpec, full, partial, firstType, nTypes, firstKeySym, nKeySyms, firstKeyActions, nKeyActions, firstKeyBehavior, nKeyBehaviors, virtualMods, firstKeyExplicit, nKeyExplicits, firstModMapKey, nModMapKeys, firstVModMapKey, nVModMapKeys = struct.unpack_from(sc.endian + 'HHHBBBBBBBBHBBBBBB', pkt[4:26])

        print('%s REQUEST[%04x] %d [E] XKEYBOARD:XkbGetMap -- deviceSpec: 0x%04x, full: 0x%04x, partial: 0x%04x, types: %d[%d], KeySyms: %d[%d], KeyActions: %d[%d], KeyBehaviors: %d[%d], VirtualMods: 0x%04x, KeyExplicits: %d[%d], ModMapKeys: %d[%d], VModMapKeys: %d[%d]' % (prompt, sc.seqNo, opcode, deviceSpec, full, partial, firstType, nTypes, firstKeySym, nKeySyms, firstKeyActions, nKeyActions, firstKeyBehavior, nKeyBehaviors, virtualMods, firstKeyExplicit, nKeyExplicits, firstModMapKey, nModMapKeys, firstVModMapKey, nVModMapKeys))

        reply=bytes([                                       0x00, 0x00, 0x08, 0xff, 0x07, 0x00, 0x00, 0x19,
            0x19, 0x08, 0xf9, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
            0xf8, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x03, 0x03, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x02, 0x02, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x09, 0x01, 0x02, 0x00, 0x02, 0x01, 0x00, 0x00, 0x01, 0x09, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00,
            0x04, 0x04, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x01, 0x04, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x40, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x40, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x20, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00,
            0x08, 0x00, 0x02, 0x00, 0x02, 0x01, 0x00, 0x00, 0x01, 0x08, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x08, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x10, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00,
            0x0c, 0x04, 0x02, 0x00, 0x02, 0x01, 0x00, 0x00, 0x01, 0x0c, 0x01, 0x04, 0x02, 0x00, 0x00, 0x00,
            0x07, 0x07, 0x04, 0x00, 0x08, 0x0f, 0x00, 0x00, 0x01, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x03, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x02, 0x04, 0x00, 0x00, 0x00,
            0x01, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x04, 0x07, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x05, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x07, 0x06, 0x07, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x05, 0x07, 0x05, 0x04, 0x00, 0x00, 0x00, 0x00, 0x06, 0x07, 0x06, 0x04, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x04, 0x00, 0x03, 0x03, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x04, 0x01, 0x08, 0x07, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x05, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x00, 0x00, 0x06, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x01, 0x07, 0x01, 0x04, 0x01, 0x00, 0x00,
            0x03, 0x03, 0x04, 0x01, 0x08, 0x0d, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x02, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x03, 0x02, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00,
            0x00, 0x01, 0x05, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x05, 0x02, 0x00, 0x01, 0x00, 0x00,
            0x00, 0x00, 0x06, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x01, 0x07, 0x01, 0x04, 0x01, 0x00, 0x00,
            0x00, 0x02, 0x07, 0x02, 0x04, 0x01, 0x00, 0x00, 0x00, 0x03, 0x06, 0x03, 0x04, 0x01, 0x00, 0x00,
            0x03, 0x03, 0x04, 0x01, 0x08, 0x0e, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x03, 0x03, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00,
            0x00, 0x01, 0x05, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x05, 0x02, 0x00, 0x01, 0x00, 0x00,
            0x00, 0x00, 0x06, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x01, 0x07, 0x01, 0x04, 0x01, 0x00, 0x00,
            0x00, 0x02, 0x06, 0x02, 0x04, 0x01, 0x00, 0x00, 0x00, 0x03, 0x07, 0x03, 0x04, 0x01, 0x00, 0x00,
            0x00, 0x03, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
            0x01, 0x01, 0x04, 0x00, 0x04, 0x03, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x03, 0x03, 0x04, 0x00, 0x04, 0x06, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x02, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x03, 0x02, 0x03, 0x04, 0x00, 0x00, 0x00, 0x03, 0x03, 0x04, 0x00, 0x04, 0x06, 0x01, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x01, 0x01, 0x05, 0x00, 0x04, 0x07, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x03, 0x01, 0x05, 0x00, 0x00, 0x00, 0x0d, 0x05, 0x06, 0x00, 0x04, 0x03, 0x00, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x01, 0x0c, 0x03, 0x04, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x04, 0x00, 0x04, 0x06, 0x01, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x03, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x04, 0x00, 0x05, 0x07, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x03, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x03, 0x03, 0x03, 0x04, 0x00, 0x00, 0x00, 0x01, 0x01, 0x05, 0x00, 0x04, 0x06, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01, 0x05, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x73, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00,
            0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x64, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
            0xef, 0x08, 0x00, 0x00, 0xce, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x66, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0xf6, 0x08, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00,
            0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x68, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
            0xff, 0x01, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x67, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xbd, 0x01, 0x00, 0x00,
            0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00,
            0xd9, 0x07, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x78, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x48, 0x22, 0x00, 0x01, 0xb2, 0x01, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x63, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00,
            0xe7, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x76, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0xd6, 0x08, 0x00, 0x00, 0xca, 0x25, 0x00, 0x01,
            0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x02, 0x00, 0xa7, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00,
            0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x62, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00,
            0xbf, 0x08, 0x00, 0x00, 0xb9, 0x02, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x71, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0xbd, 0x13, 0x00, 0x00, 0xbc, 0x13, 0x00, 0x00,
            0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x77, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00,
            0x11, 0x22, 0x00, 0x01, 0xfe, 0x0a, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x65, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x51, 0xfe, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00,
            0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x72, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00,
            0xae, 0x00, 0x00, 0x00, 0x30, 0x20, 0x00, 0x01, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x79, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00,
            0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x74, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00,
            0xf1, 0x0a, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x31, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x44, 0x20, 0x00, 0x01,
            0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
            0xc9, 0x0a, 0x00, 0x00, 0xac, 0x20, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x33, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x39, 0x20, 0x00, 0x01,
            0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x34, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
            0xa2, 0x00, 0x00, 0x00, 0x3a, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x36, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x02, 0xfb, 0x00, 0x01,
            0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x35, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00,
            0xc2, 0x08, 0x00, 0x00, 0x01, 0xfb, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x3d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0xbd, 0x08, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x39, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
            0xaa, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x37, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0xf2, 0x0a, 0x00, 0x00,
            0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00,
            0xaa, 0x0a, 0x00, 0x00, 0xa9, 0x0a, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x38, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00,
            0xba, 0x00, 0x00, 0x00, 0xfd, 0x0a, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x5d, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0xd0, 0x0a, 0x00, 0x00, 0xd1, 0x0a, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00,
            0xf8, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x75, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x57, 0xfe, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00,
            0xd2, 0x0a, 0x00, 0x00, 0xd3, 0x0a, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x69, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x52, 0xfe, 0x00, 0x00, 0xc6, 0x02, 0x00, 0x01,
            0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x70, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
            0xf0, 0x07, 0x00, 0x00, 0x0f, 0x22, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0x0d, 0xff, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00,
            0x4c, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
            0x02, 0x02, 0x04, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x06, 0x22, 0x00, 0x01,
            0xd4, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00,
            0x22, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00,
            0x02, 0x02, 0x04, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0xda, 0x02, 0x00, 0x01,
            0xff, 0xf8, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x3b, 0x00, 0x00, 0x00,
            0x3a, 0x00, 0x00, 0x00, 0xae, 0x0a, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00,
            0x02, 0x02, 0x04, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00,
            0xbb, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00,
            0x3c, 0x00, 0x00, 0x00, 0xbc, 0x08, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00,
            0x02, 0x02, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00,
            0xbf, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x6e, 0x00, 0x00, 0x00,
            0x4e, 0x00, 0x00, 0x00, 0x53, 0xfe, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x01, 0x02, 0x01, 0x00, 0x00,
            0x02, 0x02, 0x04, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00,
            0xc2, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x2e, 0x00, 0x00, 0x00,
            0x3e, 0x00, 0x00, 0x00, 0xbe, 0x08, 0x00, 0x00, 0xa2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0x09, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x02, 0x00,
            0x20, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x60, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x50, 0xfe, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x08, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0x1b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0xe7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0xe1, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xe5, 0xff, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0xe3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0xe2, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xea, 0xff, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xe4, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0xe8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xae, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xaa, 0xff, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0xab, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0x1b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xaf, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0x8d, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xad, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0xbd, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0xb0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xb1, 0xff, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xb2, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0xb3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0xb4, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xb5, 0xff, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xb6, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0xb7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xb8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0xb9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xc2, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0xc3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0xc4, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xc0, 0xff, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xc5, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0xc6, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xc8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xca, 0xff, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0xcb, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0xc7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xc9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xcc, 0xff, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x6a, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0x50, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0x55, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xff, 0xff, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xc1, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0x57, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0xbf, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x56, 0xff, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0xbe, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x00, 0x51, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
            0x53, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x54, 0xff, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x52, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x3f, 0x10, 0x40, 0x01, 0x41, 0x02, 0x42, 0x08, 0x43, 0x04, 0x44, 0x01,
            0x45, 0x08, 0x46, 0x04, 0x47, 0x10, 0x00, 0x00
        ])

        reply = struct.pack(sc.endian + 'BBHL', 1, 3, sc.seqNo, (len(reply) - 24) // 4) + reply
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtXKeyboardGetKbdByName(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 16:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        deviceSpec, need, want, load = struct.unpack_from(sc.endian + 'HHHB', pkt[4:11])

        pos = 12
        nameLen = pkt[pos]
        if pktLen < pos + 1 + nameLen:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        keymapsSpec = pkt[pos+1:pos+1+nameLen].decode('utf-8')

        pos += 1 + nameLen
        nameLen = pkt[pos]
        if pktLen < pos + 1 + nameLen:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        keycodesSpec = pkt[pos+1:pos+1+nameLen].decode('utf-8')

        pos += 1 + nameLen
        nameLen = pkt[pos]
        if pktLen < pos + 1 + nameLen:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        typesSpec = pkt[pos+1:pos+1+nameLen].decode('utf-8')

        pos += 1 + nameLen
        nameLen = pkt[pos]
        if pktLen < pos + 1 + nameLen:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        compatMapSpec = pkt[pos+1:pos+1+nameLen].decode('utf-8')

        pos += 1 + nameLen
        nameLen = pkt[pos]
        if pktLen < pos + 1 + nameLen:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        symbolsSpec = pkt[pos+1:pos+1+nameLen].decode('utf-8')

        pos += 1 + nameLen
        nameLen = pkt[pos]
        if pktLen < pos + 1 + nameLen:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        geometrySpec = pkt[pos+1:pos+1+nameLen].decode('utf-8')

        print('%s REQUEST[%04x] %d [E] XKEYBOARD:XkbGetKbdByName -- deviceSpec: 0x%04x, need: 0x%04x, want: 0x%04x, load: %d, keymapsSpec: %s, keycodesSpec: %s, typesSpec: %s, compatMapSpec: %s, symbolsSpec: %s, geometrySpec: %s' % (prompt, sc.seqNo, opcode, deviceSpec, need, want, load, keymapsSpec, keycodesSpec, typesSpec, compatMapSpec, symbolsSpec, geometrySpec))

        reply = bytes([
            0x01, 0x03, 0xb5, 0x00, 0xbb, 0x07, 0x00, 0x00, 0x00, 0x00, 0x08, 0xff, 0xff, 0x00, 0x00, 0x19,
            0x19, 0x08, 0xe0, 0x03, 0xf8, 0x08, 0x04, 0x00, 0xf8, 0x08, 0xf8, 0x00, 0x08, 0xf8, 0xf8, 0x08,
            0xf8, 0x01, 0x08, 0xf8, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x03, 0x03, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x02, 0x02, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x02, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00,
            0x04, 0x04, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x01, 0x04, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x40, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x40, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x20, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x08, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x10, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00,
            0x04, 0x04, 0x02, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x04, 0x01, 0x04, 0x02, 0x00, 0x00, 0x00,
            0x07, 0x07, 0x04, 0x00, 0x08, 0x0e, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x03, 0x02, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x02, 0x03, 0x02, 0x04, 0x00, 0x00, 0x00, 0x01, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x07, 0x04, 0x07, 0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x06, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x07, 0x06, 0x07, 0x04, 0x00, 0x00, 0x00, 0x00, 0x05, 0x07, 0x05, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x06, 0x07, 0x06, 0x04, 0x00, 0x00, 0x00, 0x01, 0x01, 0x04, 0x00, 0x03, 0x03, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x02, 0x01, 0x04, 0x00, 0x00, 0x00, 0x01, 0x01, 0x04, 0x01, 0x08, 0x07, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00,
            0x00, 0x01, 0x05, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x04, 0x01, 0x00, 0x00,
            0x00, 0x01, 0x07, 0x01, 0x04, 0x01, 0x00, 0x00, 0x03, 0x03, 0x04, 0x01, 0x08, 0x0d, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x02, 0x03, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x03, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x05, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x00, 0x02, 0x05, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x04, 0x01, 0x00, 0x00,
            0x00, 0x01, 0x07, 0x01, 0x04, 0x01, 0x00, 0x00, 0x00, 0x02, 0x07, 0x02, 0x04, 0x01, 0x00, 0x00,
            0x00, 0x03, 0x06, 0x03, 0x04, 0x01, 0x00, 0x00, 0x03, 0x03, 0x04, 0x01, 0x08, 0x0e, 0x01, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x05, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x00, 0x02, 0x05, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x04, 0x01, 0x00, 0x00,
            0x00, 0x01, 0x07, 0x01, 0x04, 0x01, 0x00, 0x00, 0x00, 0x02, 0x06, 0x02, 0x04, 0x01, 0x00, 0x00,
            0x00, 0x03, 0x07, 0x03, 0x04, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x01, 0x01, 0x04, 0x00, 0x04, 0x03, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00, 0x03, 0x03, 0x04, 0x00, 0x04, 0x06, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x02, 0x03, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x03, 0x04, 0x00, 0x00, 0x00,
            0x03, 0x03, 0x04, 0x00, 0x04, 0x06, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x03, 0x03, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
            0x01, 0x01, 0x05, 0x00, 0x04, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x03, 0x01, 0x05, 0x00, 0x00, 0x00, 0x05, 0x05, 0x06, 0x00, 0x04, 0x03, 0x00, 0x00,
            0x00, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x04, 0x03, 0x04, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x04, 0x00, 0x04, 0x06, 0x01, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x03, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x04, 0x00, 0x05, 0x07, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x03, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x03, 0x03, 0x03, 0x04, 0x00, 0x00, 0x00, 0x01, 0x01, 0x05, 0x00, 0x04, 0x06, 0x00, 0x00,
            0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x04, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01, 0x05, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
            0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00,
            0x61, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00,
            0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x05, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x05, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x03, 0x09, 0x03, 0x0a, 0x03, 0x0b, 0x03,
            0x0c, 0x03, 0x0d, 0x03, 0x0e, 0x03, 0x0f, 0x03, 0x10, 0x03, 0x11, 0x03, 0x12, 0x03, 0x13, 0x03,
            0x14, 0x03, 0x15, 0x03, 0x16, 0x03, 0x17, 0x03, 0x18, 0x03, 0x19, 0x03, 0x1a, 0x03, 0x1b, 0x03,
            0x1c, 0x03, 0x1d, 0x03, 0x1e, 0x03, 0x1f, 0x03, 0x20, 0x03, 0x21, 0x03, 0x22, 0x03, 0x23, 0x03,
            0x24, 0x03, 0x25, 0x03, 0x26, 0x03, 0x27, 0x03, 0x28, 0x03, 0x29, 0x03, 0x2a, 0x03, 0x2b, 0x03,
            0x2c, 0x03, 0x2d, 0x03, 0x2e, 0x03, 0x2f, 0x03, 0x30, 0x03, 0x31, 0x03, 0x32, 0x03, 0x33, 0x03,
            0x34, 0x03, 0x35, 0x03, 0x36, 0x03, 0x37, 0x03, 0x38, 0x03, 0x39, 0x03, 0x3a, 0x03, 0x3b, 0x03,
            0x3c, 0x03, 0x3d, 0x03, 0x3e, 0x03, 0x3f, 0x03, 0x40, 0x03, 0x41, 0x03, 0x42, 0x03, 0x43, 0x03,
            0x44, 0x03, 0x45, 0x03, 0x46, 0x03, 0x47, 0x03, 0x48, 0x03, 0x49, 0x03, 0x4a, 0x03, 0x4b, 0x03,
            0x4c, 0x03, 0x4d, 0x03, 0x4e, 0x03, 0x4f, 0x03, 0x50, 0x03, 0x51, 0x03, 0x52, 0x03, 0x53, 0x03,
            0x54, 0x03, 0x55, 0x03, 0x56, 0x03, 0x57, 0x03, 0x58, 0x03, 0x59, 0x03, 0x5a, 0x03, 0x5b, 0x03,
            0x5c, 0x03, 0x5d, 0x03, 0x5e, 0x03, 0x5f, 0x03, 0x60, 0x03, 0x61, 0x03, 0x62, 0x03, 0x63, 0x03,
            0x64, 0x03, 0x65, 0x03, 0x66, 0x03, 0x67, 0x03, 0x68, 0x03, 0x69, 0x03, 0x6a, 0x03, 0x6b, 0x03,
            0x6c, 0x03, 0x6d, 0x03, 0x6e, 0x03, 0x6f, 0x03, 0x70, 0x03, 0x71, 0x03, 0x72, 0x03, 0x73, 0x03,
            0x74, 0x03, 0x75, 0x03, 0x76, 0x03, 0x77, 0x03, 0x78, 0x03, 0x79, 0x03, 0x7a, 0x03, 0x7b, 0x03,
            0x7c, 0x03, 0x7d, 0x03, 0x7e, 0x03, 0x7f, 0x03, 0x80, 0x03, 0x81, 0x03, 0x82, 0x03, 0x83, 0x03,
            0x84, 0x03, 0x85, 0x03, 0x86, 0x03, 0x87, 0x03, 0x88, 0x03, 0x89, 0x03, 0x8a, 0x03, 0x8b, 0x03,
            0x8c, 0x03, 0x8d, 0x03, 0x8e, 0x03, 0x8f, 0x03, 0x90, 0x03, 0x91, 0x03, 0x92, 0x03, 0x93, 0x03,
            0x94, 0x03, 0x95, 0x03, 0x96, 0x03, 0x97, 0x03, 0x98, 0x03, 0x99, 0x03, 0x9a, 0x03, 0x9b, 0x03,
            0x9c, 0x03, 0x9d, 0x03, 0x9e, 0x03, 0x9f, 0x03, 0xa0, 0x03, 0xa1, 0x03, 0xa2, 0x03, 0xa3, 0x03,
            0xa4, 0x03, 0xa5, 0x03, 0xa6, 0x03, 0xa7, 0x03, 0xa8, 0x03, 0xa9, 0x03, 0xaa, 0x03, 0xab, 0x03,
            0xac, 0x03, 0xad, 0x03, 0xae, 0x03, 0xaf, 0x03, 0xb0, 0x03, 0xb1, 0x03, 0xb2, 0x03, 0xb3, 0x03,
            0xb4, 0x03, 0xb5, 0x03, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0xb9, 0x03, 0xba, 0x03, 0xbb, 0x03,
            0xbc, 0x03, 0xbd, 0x03, 0xbe, 0x03, 0xbf, 0x03, 0xc0, 0x03, 0xc1, 0x03, 0xc2, 0x03, 0xc3, 0x03,
            0xc4, 0x03, 0xc5, 0x03, 0xc6, 0x03, 0xc7, 0x03, 0xc8, 0x03, 0xc9, 0x03, 0xca, 0x03, 0xcb, 0x03,
            0xcc, 0x03, 0xcd, 0x03, 0xce, 0x03, 0xcf, 0x03, 0xd0, 0x03, 0xd1, 0x03, 0xd2, 0x03, 0xd3, 0x03,
            0xd4, 0x03, 0xd5, 0x03, 0xd6, 0x03, 0xd7, 0x03, 0xd8, 0x03, 0xd9, 0x03, 0xda, 0x03, 0xdb, 0x03,
            0xdc, 0x03, 0xdd, 0x03, 0xde, 0x03, 0xdf, 0x03, 0xe0, 0x03, 0xe1, 0x03, 0xe2, 0x03, 0xe3, 0x03,
            0xe4, 0x03, 0xe5, 0x03, 0xe6, 0x03, 0xe7, 0x03, 0xe8, 0x03, 0xe9, 0x03, 0xea, 0x03, 0xeb, 0x03,
            0xec, 0x03, 0xed, 0x03, 0xee, 0x03, 0xef, 0x03, 0xf0, 0x03, 0xf1, 0x03, 0xf2, 0x03, 0xf3, 0x03,
            0xf4, 0x03, 0xf5, 0x03, 0xf6, 0x03, 0xf7, 0x03, 0xf8, 0x03, 0xf9, 0x03, 0xfa, 0x03, 0xfb, 0x03,
            0xfc, 0x03, 0xfd, 0x03, 0xfe, 0x03, 0xff, 0x03, 0x08, 0x10, 0x00, 0x00, 0x01, 0x03, 0xb5, 0x00,
            0xec, 0x01, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xfe, 0x00, 0x00,
            0x01, 0x84, 0xff, 0x00, 0x02, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xe6, 0xff, 0x00, 0x00,
            0x03, 0x02, 0xff, 0x00, 0x03, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00,
            0xff, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00,
            0xff, 0x02, 0xff, 0x00, 0x0b, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00,
            0xff, 0x82, 0x02, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0xfe, 0x00, 0x00,
            0xff, 0x82, 0x02, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x05, 0xfe, 0x00, 0x00,
            0xff, 0x82, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xe9, 0xff, 0x00, 0x00,
            0xff, 0x02, 0x01, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xea, 0xff, 0x00, 0x00,
            0xff, 0x02, 0x01, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0xff, 0x00, 0x00,
            0xff, 0x02, 0x0a, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xff, 0x00, 0x00,
            0xff, 0x02, 0x0a, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xeb, 0xff, 0x00, 0x00,
            0xff, 0x02, 0x0b, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0xff, 0x00, 0x00,
            0xff, 0x02, 0x0b, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0xff, 0x00, 0x00,
            0xff, 0x02, 0x0c, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xee, 0xff, 0x00, 0x00,
            0xff, 0x02, 0x0c, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0xff, 0x00, 0x00,
            0xff, 0x02, 0x07, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xfe, 0x00, 0x00,
            0xff, 0x82, 0x08, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0xfe, 0x00, 0x00,
            0xff, 0x02, 0x08, 0x00, 0x02, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0xfe, 0x00, 0x00,
            0xff, 0x02, 0x08, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7e, 0xff, 0x00, 0x00,
            0xff, 0x81, 0x09, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x05, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x06, 0xfe, 0x00, 0x00,
            0xff, 0x81, 0x09, 0x00, 0x05, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xfe, 0x00, 0x00,
            0xff, 0x81, 0x09, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xfe, 0x00, 0x00,
            0xff, 0x81, 0x09, 0x00, 0x06, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x06, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x06, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb1, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x9c, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0xb2, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x99, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0xb3, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x9b, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0xb4, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x96, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xb6, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x98, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xb7, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x95, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xb8, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x97, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xb9, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0x9a, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0xb5, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9d, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x0a, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xaf, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x0a, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x93, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x0a, 0x04, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0xaa, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x0a, 0x04, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x94, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x0a, 0x04, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0xad, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x0a, 0x04, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0xac, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xab, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x09, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9e, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x09, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xae, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9f, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x0a, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xd7, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x0a, 0x04, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xda, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0xdc, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xde, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0xe0, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x01, 0x07, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0xe8, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe9, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x08, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xea, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xeb, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x08, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0xee, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xef, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x08, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x08, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0xf1, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x08, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0xf4, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf5, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x09, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xf6, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x09, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xf7, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x09, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0xf9, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0xfa, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0xfb, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0a, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0a, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x70, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x71, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x72, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x73, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x74, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x75, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x76, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x77, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x78, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x79, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x7a, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xd5, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe9, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0xea, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0xe7, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x01, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe8, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x01, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xeb, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x01, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xec, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x01, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xed, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x01, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xee, 0xff, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x01, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x0d, 0x05, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x86, 0x55, 0x6e, 0x67, 0x72, 0x61, 0x62, 0x00, 0x21, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x86, 0x43, 0x6c, 0x73, 0x47, 0x72, 0x62, 0x00, 0x22, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x86, 0x2b, 0x56, 0x4d, 0x6f, 0x64, 0x65, 0x00, 0x23, 0xfe, 0x08, 0x10,
            0xff, 0x01, 0xff, 0x01, 0x86, 0x2d, 0x56, 0x4d, 0x6f, 0x64, 0x65, 0x00, 0x11, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x02, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0xfe, 0x00, 0x00,
            0xff, 0x01, 0xff, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x02, 0x04, 0xff, 0x00, 0x03, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xff, 0x02, 0xff, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x01, 0x03, 0xb5, 0x00,
            0x60, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x04,
            0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x04, 0x00, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x80, 0x08, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x80, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0xb5, 0x00,
            0x8c, 0x01, 0x00, 0x00, 0xff, 0x0b, 0x00, 0x00, 0x08, 0xff, 0x19, 0x00, 0xff, 0x1f, 0x08, 0xf8,
            0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x01, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xdd, 0x00, 0x00, 0x00, 0xdd, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00,
            0x8b, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00,
            0x93, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00,
            0x9a, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00,
            0x9e, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
            0xaf, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00,
            0xb3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00,
            0xb9, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
            0x02, 0x02, 0x02, 0x02, 0x08, 0x03, 0x08, 0x08, 0x08, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05,
            0x04, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
            0x8f, 0x00, 0x00, 0x00, 0x92, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
            0x8f, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00,
            0x8f, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00,
            0x8f, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
            0x8f, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00,
            0x8f, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00,
            0xa3, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00,
            0x8f, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00,
            0x90, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00,
            0xac, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00,
            0x90, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00,
            0xac, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00,
            0x90, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00,
            0xac, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00,
            0x90, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00,
            0x90, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00,
            0x90, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00,
            0x94, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00,
            0xa9, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00,
            0x90, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00,
            0x90, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00,
            0x8f, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00,
            0xbf, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00,
            0xc4, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00,
            0x7f, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00,
            0x83, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00,
            0x87, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0xb5, 0x00,
            0xdf, 0x01, 0x00, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x01, 0x00, 0x5c, 0x12, 0x08, 0x07, 0x01, 0x00,
            0x06, 0x00, 0x0f, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x35, 0x00, 0x2d, 0x2a,
            0x2d, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x69, 0x63, 0x61, 0x2d, 0x6d, 0x65, 0x64, 0x69, 0x75,
            0x6d, 0x2d, 0x72, 0x2d, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2d, 0x2d, 0x2a, 0x2d, 0x31, 0x32,
            0x30, 0x2d, 0x2a, 0x2d, 0x2a, 0x2d, 0x2a, 0x2d, 0x2a, 0x2d, 0x69, 0x73, 0x6f, 0x38, 0x38, 0x35,
            0x39, 0x2d, 0x31, 0x00, 0x0b, 0x00, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
            0x6e, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x20, 0x31, 0x30,
            0x34, 0x00, 0x00, 0x00, 0x05, 0x00, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x00, 0x05, 0x00, 0x77, 0x68,
            0x69, 0x74, 0x65, 0x00, 0x06, 0x00, 0x67, 0x72, 0x65, 0x79, 0x32, 0x30, 0x06, 0x00, 0x67, 0x72,
            0x65, 0x79, 0x31, 0x30, 0x05, 0x00, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x00, 0x07, 0x00, 0x67, 0x72,
            0x65, 0x65, 0x6e, 0x33, 0x30, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0x00,
            0x01, 0x0a, 0x00, 0x00, 0xb4, 0x00, 0xb4, 0x00, 0x02, 0x0a, 0x00, 0x00, 0x14, 0x00, 0x0a, 0x00,
            0xa0, 0x00, 0xa0, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0x00, 0x01, 0x0a, 0x00, 0x00,
            0x7c, 0x01, 0xb4, 0x00, 0x02, 0x0a, 0x00, 0x00, 0x14, 0x00, 0x0a, 0x00, 0x68, 0x01, 0xa0, 0x00,
            0xc8, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x18, 0x01, 0xb4, 0x00,
            0x02, 0x0a, 0x00, 0x00, 0x14, 0x00, 0x0a, 0x00, 0x04, 0x01, 0xa0, 0x00, 0xc9, 0x00, 0x00, 0x00,
            0x02, 0xff, 0xff, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x18, 0x01, 0xb4, 0x00, 0x02, 0x0a, 0x00, 0x00,
            0x14, 0x00, 0x0a, 0x00, 0x04, 0x01, 0xa0, 0x00, 0xca, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0x00,
            0x01, 0x0a, 0x00, 0x00, 0xa4, 0x01, 0xb4, 0x00, 0x02, 0x0a, 0x00, 0x00, 0x14, 0x00, 0x0a, 0x00,
            0x90, 0x01, 0xa0, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0x00, 0x01, 0x0a, 0x00, 0x00,
            0x4a, 0x01, 0xb4, 0x00, 0x02, 0x0a, 0x00, 0x00, 0x14, 0x00, 0x0a, 0x00, 0x36, 0x01, 0xa0, 0x00,
            0xcc, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0x00, 0x01, 0x0a, 0x00, 0x00, 0xa4, 0x01, 0xb4, 0x00,
            0x02, 0x0a, 0x00, 0x00, 0x14, 0x00, 0x0a, 0x00, 0x90, 0x01, 0xa0, 0x00, 0xcd, 0x00, 0x00, 0x00,
            0x02, 0xff, 0xff, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x08, 0x02, 0xb4, 0x00, 0x02, 0x0a, 0x00, 0x00,
            0x14, 0x00, 0x0a, 0x00, 0xf4, 0x01, 0xa0, 0x00, 0xce, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0x00,
            0x01, 0x0a, 0x00, 0x00, 0x0e, 0x01, 0xb4, 0x00, 0x02, 0x0a, 0x00, 0x00, 0x14, 0x00, 0x0a, 0x00,
            0xfa, 0x00, 0xa0, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0x00, 0x01, 0x0a, 0x00, 0x00,
            0xe6, 0x00, 0xb4, 0x00, 0x02, 0x0a, 0x00, 0x00, 0x14, 0x00, 0x0a, 0x00, 0xd2, 0x00, 0xa0, 0x00,
            0xd0, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x6a, 0x04, 0xb4, 0x00,
            0x02, 0x0a, 0x00, 0x00, 0x14, 0x00, 0x0a, 0x00, 0x56, 0x04, 0xa0, 0x00, 0xd1, 0x00, 0x00, 0x00,
            0x02, 0xff, 0xff, 0x00, 0x01, 0x0a, 0x00, 0x00, 0x72, 0x01, 0xb4, 0x00, 0x02, 0x0a, 0x00, 0x00,
            0x14, 0x00, 0x0a, 0x00, 0x5e, 0x01, 0xa0, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x02, 0xff, 0xff, 0x00,
            0x01, 0x0a, 0x00, 0x00, 0xb4, 0x00, 0x72, 0x01, 0x02, 0x0a, 0x00, 0x00, 0x14, 0x00, 0x0a, 0x00,
            0xa0, 0x00, 0x5e, 0x01, 0xd3, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00,
            0xee, 0x02, 0xc8, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x32, 0x00, 0x0a, 0x00, 0xd5, 0x00, 0x00, 0x00, 0xdc, 0x00, 0xbe, 0x00, 0xb6, 0x0d, 0xbe, 0x00,
            0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00,
            0x45, 0x53, 0x43, 0x00, 0x0a, 0x00, 0x00, 0x02, 0x46, 0x4b, 0x30, 0x31, 0xc8, 0x00, 0x00, 0x01,
            0x46, 0x4b, 0x30, 0x32, 0x0a, 0x00, 0x00, 0x01, 0x46, 0x4b, 0x30, 0x33, 0x0a, 0x00, 0x00, 0x01,
            0x46, 0x4b, 0x30, 0x34, 0x0a, 0x00, 0x00, 0x01, 0x46, 0x4b, 0x30, 0x35, 0x6e, 0x00, 0x00, 0x01,
            0x46, 0x4b, 0x30, 0x36, 0x0a, 0x00, 0x00, 0x01, 0x46, 0x4b, 0x30, 0x37, 0x0a, 0x00, 0x00, 0x01,
            0x46, 0x4b, 0x30, 0x38, 0x0a, 0x00, 0x00, 0x01, 0x46, 0x4b, 0x30, 0x39, 0x6e, 0x00, 0x00, 0x01,
            0x46, 0x4b, 0x31, 0x30, 0x0a, 0x00, 0x00, 0x01, 0x46, 0x4b, 0x31, 0x31, 0x0a, 0x00, 0x00, 0x01,
            0x46, 0x4b, 0x31, 0x32, 0x0a, 0x00, 0x00, 0x01, 0x50, 0x52, 0x53, 0x43, 0x50, 0x00, 0x00, 0x01,
            0x53, 0x43, 0x4c, 0x4b, 0x0a, 0x00, 0x00, 0x01, 0x50, 0x41, 0x55, 0x53, 0x0a, 0x00, 0x00, 0x01,
            0xd6, 0x00, 0x00, 0x00, 0x62, 0x02, 0xbe, 0x00, 0x36, 0x0b, 0xb6, 0x03, 0x00, 0x00, 0x08, 0x05,
            0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x54, 0x4c, 0x44, 0x45,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x30, 0x31, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x30, 0x32,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x30, 0x33, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x30, 0x34,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x30, 0x35, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x30, 0x36,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x30, 0x37, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x30, 0x38,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x30, 0x39, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x31, 0x30,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x31, 0x31, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x45, 0x31, 0x32,
            0x0a, 0x00, 0x00, 0x01, 0x42, 0x4b, 0x53, 0x50, 0x0a, 0x00, 0x01, 0x02, 0xc8, 0x00, 0x0a, 0x00,
            0x0e, 0x00, 0x00, 0x00, 0x54, 0x41, 0x42, 0x00, 0x0a, 0x00, 0x02, 0x02, 0x41, 0x44, 0x30, 0x31,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x44, 0x30, 0x32, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x44, 0x30, 0x33,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x44, 0x30, 0x34, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x44, 0x30, 0x35,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x44, 0x30, 0x36, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x44, 0x30, 0x37,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x44, 0x30, 0x38, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x44, 0x30, 0x39,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x44, 0x31, 0x30, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x44, 0x31, 0x31,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x44, 0x31, 0x32, 0x0a, 0x00, 0x00, 0x01, 0x42, 0x4b, 0x53, 0x4c,
            0x0a, 0x00, 0x03, 0x01, 0x86, 0x01, 0x0a, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x43, 0x41, 0x50, 0x53,
            0x0a, 0x00, 0x05, 0x02, 0x41, 0x43, 0x30, 0x31, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x43, 0x30, 0x32,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x43, 0x30, 0x33, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x43, 0x30, 0x34,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x43, 0x30, 0x35, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x43, 0x30, 0x36,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x43, 0x30, 0x37, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x43, 0x30, 0x38,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x43, 0x30, 0x39, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x43, 0x31, 0x30,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x43, 0x31, 0x31, 0x0a, 0x00, 0x00, 0x01, 0x52, 0x54, 0x52, 0x4e,
            0x0a, 0x00, 0x04, 0x02, 0x44, 0x02, 0x0a, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x4c, 0x46, 0x53, 0x48,
            0x0a, 0x00, 0x06, 0x02, 0x41, 0x42, 0x30, 0x31, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x42, 0x30, 0x32,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x42, 0x30, 0x33, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x42, 0x30, 0x34,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x42, 0x30, 0x35, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x42, 0x30, 0x36,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x42, 0x30, 0x37, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x42, 0x30, 0x38,
            0x0a, 0x00, 0x00, 0x01, 0x41, 0x42, 0x30, 0x39, 0x0a, 0x00, 0x00, 0x01, 0x41, 0x42, 0x31, 0x30,
            0x0a, 0x00, 0x00, 0x01, 0x52, 0x54, 0x53, 0x48, 0x0a, 0x00, 0x07, 0x02, 0x02, 0x03, 0x0a, 0x00,
            0x08, 0x00, 0x00, 0x00, 0x4c, 0x43, 0x54, 0x4c, 0x0a, 0x00, 0x08, 0x02, 0x4c, 0x57, 0x49, 0x4e,
            0x0a, 0x00, 0x09, 0x02, 0x4c, 0x41, 0x4c, 0x54, 0x0a, 0x00, 0x09, 0x02, 0x53, 0x50, 0x43, 0x45,
            0x0a, 0x00, 0x0a, 0x01, 0x52, 0x41, 0x4c, 0x54, 0x0a, 0x00, 0x09, 0x02, 0x52, 0x57, 0x49, 0x4e,
            0x0a, 0x00, 0x09, 0x02, 0x4d, 0x45, 0x4e, 0x55, 0x0a, 0x00, 0x09, 0x02, 0x52, 0x43, 0x54, 0x4c,
            0x0a, 0x00, 0x09, 0x02, 0xd7, 0x00, 0x00, 0x00, 0x62, 0x02, 0x30, 0x0c, 0x44, 0x02, 0xb6, 0x03,
            0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x03, 0x00, 0x00, 0x00,
            0x49, 0x4e, 0x53, 0x00, 0x0a, 0x00, 0x00, 0x02, 0x48, 0x4f, 0x4d, 0x45, 0x0a, 0x00, 0x00, 0x02,
            0x50, 0x47, 0x55, 0x50, 0x0a, 0x00, 0x00, 0x02, 0xc8, 0x00, 0x0a, 0x00, 0x03, 0x00, 0x00, 0x00,
            0x44, 0x45, 0x4c, 0x45, 0x0a, 0x00, 0x00, 0x02, 0x45, 0x4e, 0x44, 0x00, 0x0a, 0x00, 0x00, 0x02,
            0x50, 0x47, 0x44, 0x4e, 0x0a, 0x00, 0x00, 0x02, 0x44, 0x02, 0xc8, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x55, 0x50, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x02, 0x02, 0x03, 0x0a, 0x00, 0x03, 0x00, 0x00, 0x00,
            0x4c, 0x45, 0x46, 0x54, 0x0a, 0x00, 0x00, 0x02, 0x44, 0x4f, 0x57, 0x4e, 0x0a, 0x00, 0x00, 0x02,
            0x52, 0x47, 0x48, 0x54, 0x0a, 0x00, 0x00, 0x02, 0xd8, 0x00, 0x00, 0x00, 0x62, 0x02, 0xb0, 0x0e,
            0x02, 0x03, 0xb6, 0x03, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x0a, 0x00,
            0x04, 0x00, 0x00, 0x00, 0x4e, 0x4d, 0x4c, 0x4b, 0x0a, 0x00, 0x00, 0x02, 0x4b, 0x50, 0x44, 0x56,
            0x0a, 0x00, 0x00, 0x02, 0x4b, 0x50, 0x4d, 0x55, 0x0a, 0x00, 0x00, 0x02, 0x4b, 0x50, 0x53, 0x55,
            0x0a, 0x00, 0x00, 0x02, 0xc8, 0x00, 0x0a, 0x00, 0x04, 0x00, 0x00, 0x00, 0x4b, 0x50, 0x37, 0x00,
            0x0a, 0x00, 0x00, 0x01, 0x4b, 0x50, 0x38, 0x00, 0x0a, 0x00, 0x00, 0x01, 0x4b, 0x50, 0x39, 0x00,
            0x0a, 0x00, 0x00, 0x01, 0x4b, 0x50, 0x41, 0x44, 0x0a, 0x00, 0x0c, 0x02, 0x86, 0x01, 0x0a, 0x00,
            0x03, 0x00, 0x00, 0x00, 0x4b, 0x50, 0x34, 0x00, 0x0a, 0x00, 0x00, 0x01, 0x4b, 0x50, 0x35, 0x00,
            0x0a, 0x00, 0x00, 0x01, 0x4b, 0x50, 0x36, 0x00, 0x0a, 0x00, 0x00, 0x01, 0x44, 0x02, 0x0a, 0x00,
            0x04, 0x00, 0x00, 0x00, 0x4b, 0x50, 0x31, 0x00, 0x0a, 0x00, 0x00, 0x01, 0x4b, 0x50, 0x32, 0x00,
            0x0a, 0x00, 0x00, 0x01, 0x4b, 0x50, 0x33, 0x00, 0x0a, 0x00, 0x00, 0x01, 0x4b, 0x50, 0x45, 0x4e,
            0x0a, 0x00, 0x0c, 0x02, 0x02, 0x03, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x4b, 0x50, 0x30, 0x00,
            0x0a, 0x00, 0x0b, 0x01, 0x4b, 0x50, 0x44, 0x4c, 0x0a, 0x00, 0x00, 0x01, 0xd9, 0x00, 0x00, 0x00,
            0x02, 0x00, 0xdc, 0x00, 0xba, 0x0e, 0x00, 0x00, 0x03, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xc0, 0x00, 0x00, 0x00, 0x04, 0x01, 0x72, 0x01, 0xec, 0x0e, 0x00, 0x00, 0x0e, 0x04, 0x05, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x04, 0x02, 0x72, 0x01, 0xe6, 0x0f, 0x00, 0x00,
            0x0e, 0x04, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x04, 0x03, 0x72, 0x01,
            0xea, 0x10, 0x00, 0x00, 0x0e, 0x04, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00,
            0x03, 0x04, 0xfa, 0x00, 0xc4, 0x0e, 0x00, 0x00, 0xc6, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x08, 0x00, 0x4e, 0x75, 0x6d, 0x0a, 0x4c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x35, 0x00, 0x2d, 0x2a,
            0x2d, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x69, 0x63, 0x61, 0x2d, 0x6d, 0x65, 0x64, 0x69, 0x75,
            0x6d, 0x2d, 0x72, 0x2d, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2d, 0x2d, 0x2a, 0x2d, 0x31, 0x32,
            0x30, 0x2d, 0x2a, 0x2d, 0x2a, 0x2d, 0x2a, 0x2d, 0x2a, 0x2d, 0x69, 0x73, 0x6f, 0x38, 0x38, 0x35,
            0x39, 0x2d, 0x31, 0x00, 0xdb, 0x00, 0x00, 0x00, 0x03, 0x05, 0xfa, 0x00, 0xbe, 0x0f, 0x00, 0x00,
            0x08, 0x01, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x43, 0x61, 0x70, 0x73, 0x0a, 0x4c,
            0x6f, 0x63, 0x6b, 0x00, 0x35, 0x00, 0x2d, 0x2a, 0x2d, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x69,
            0x63, 0x61, 0x2d, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x2d, 0x72, 0x2d, 0x6e, 0x6f, 0x72, 0x6d,
            0x61, 0x6c, 0x2d, 0x2d, 0x2a, 0x2d, 0x31, 0x32, 0x30, 0x2d, 0x2a, 0x2d, 0x2a, 0x2d, 0x2a, 0x2d,
            0x2a, 0x2d, 0x69, 0x73, 0x6f, 0x38, 0x38, 0x35, 0x39, 0x2d, 0x31, 0x00, 0xdc, 0x00, 0x00, 0x00,
            0x03, 0x06, 0xfa, 0x00, 0xb8, 0x10, 0x00, 0x00, 0x8c, 0x01, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x0b, 0x00, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x0a, 0x4c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00,
            0x35, 0x00, 0x2d, 0x2a, 0x2d, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x69, 0x63, 0x61, 0x2d, 0x6d,
            0x65, 0x64, 0x69, 0x75, 0x6d, 0x2d, 0x72, 0x2d, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2d, 0x2d,
            0x2a, 0x2d, 0x31, 0x32, 0x30, 0x2d, 0x2a, 0x2d, 0x2a, 0x2d, 0x2a, 0x2d, 0x2a, 0x2d, 0x69, 0x73,
            0x6f, 0x38, 0x38, 0x35, 0x39, 0x2d, 0x31, 0x00
        ])

        reply = struct.pack(sc.endian + 'BBHLBBBBHHLLLL', 1, 3, sc.seqNo, len(reply) // 4, 8, 255, 0, 0, 0x007f, 0x00ff, 0, 0, 0, 0) + reply
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtXFixes(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        if extra == 0:
            ss.state = 'CLIENT_REQ_EXT_XFIXES_QUERY_VERSION'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif extra == 2:
            ss.state = 'CLIENT_REQ_EXT_XFIXES_SELECT_SELECTION_INPUT'
            stateArgs = (opcode, extra, pktLen, pkt)

        else:
            print('%s REQUEST[%04x] %d [E] XFIXES:%d [%d]' % (prompt, sc.seqNo, opcode, extra, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)

        return stateActions[ss.state](readBuf, *stateArgs)
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtXFixesQueryVersion(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 12:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        majorVersion, minorVersion = struct.unpack_from(sc.endian + 'LL', pkt[4:12])
        print('%s REQUEST[%04x] %d [E] XFIXES:QueryVersion -- Version 0x%08x:0x%08x' % (prompt, sc.seqNo, opcode, majorVersion, minorVersion))

        reply = struct.pack(sc.endian + 'BBHLLLLLLL', 1, 0, sc.seqNo, 0, majorVersion, minorVersion, 0, 0, 0, 0)
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtXFixesSelectSelectionInput(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 16:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        window, selection, eventMask = struct.unpack_from(sc.endian + 'LLL', pkt[4:16])
        print('%s REQUEST[%04x] %d [E] XFIXES:SelectSelectionInput -- window: 0x%08x, selection: 0x%08x, eventMask: 0x%08x' % (prompt, sc.seqNo, opcode, window, selection, eventMask))

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtRender(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        if extra == 0:
            ss.state = 'CLIENT_REQ_EXT_RENDER_QUERY_VERSION'
            stateArgs = (opcode, extra, pktLen, pkt)

        elif extra == 1:
            ss.state = 'CLIENT_REQ_EXT_RENDER_QUERY_PICT_FORMATS'
            stateArgs = (opcode, extra, pktLen, pkt)

        else:
            print('%s REQUEST[%04x] %d [E] RENDER:%d [%d]' % (prompt, sc.seqNo, opcode, extra, pktLen))
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)

        return stateActions[ss.state](readBuf, *stateArgs)
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtRenderQueryVersion(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        if pktLen < 12:
            ss.state = 'CLIENT_REQ_DUMP'
            stateArgs = (opcode, extra, pktLen, [len(pkt)], pkt)
            return chunkLen + stateActions[ss.state](readBuf[chunkLen:], *stateArgs)

        majorVersion, minorVersion = struct.unpack_from(sc.endian + 'LL', pkt[4:12])
        print('%s REQUEST[%04x] %d [E] RENDER:QueryVersion -- Version 0x%08x:0x%08x' % (prompt, sc.seqNo, opcode, majorVersion, minorVersion))

        reply = struct.pack(sc.endian + 'BBHLLLLLLL', 1, 0, sc.seqNo, 0, majorVersion, minorVersion, 0, 0, 0, 0)
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    def onStateClientReqExtRenderQueryPictFormats(readBuf, opcode, extra, pktLen, pkt):
        nonlocal stateArgs

        chunkLen = min(pktLen - len(pkt), len(readBuf))
        pkt.extend(readBuf[:chunkLen])
        if len(pkt) < pktLen: return chunkLen

        print('%s REQUEST[%04x] %d [E] RENDER:QueryPictFormats' % (prompt, sc.seqNo, opcode))

        reply = bytes([                                     0x1c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x07, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x23, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
            0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x01, 0x20, 0x00, 0x00, 0x10, 0x00, 0xff, 0x00,
            0x08, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x18, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x27, 0x00, 0x00, 0x00, 0x01, 0x20, 0x00, 0x00, 0x10, 0x00, 0xff, 0x00, 0x08, 0x00, 0xff, 0x00,
            0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
            0x01, 0x20, 0x00, 0x00, 0x08, 0x00, 0xff, 0x00, 0x10, 0x00, 0xff, 0x00, 0x18, 0x00, 0xff, 0x00,
            0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x01, 0x20, 0x00, 0x00,
            0x08, 0x00, 0xff, 0x00, 0x10, 0x00, 0xff, 0x00, 0x18, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x10, 0x00, 0xff, 0x00,
            0x08, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x2b, 0x00, 0x00, 0x00, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x08, 0x00, 0xff, 0x00,
            0x10, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
            0x01, 0x0f, 0x00, 0x00, 0x08, 0x00, 0x0f, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x01, 0x0f, 0x00, 0x00,
            0x00, 0x00, 0x0f, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x01, 0x0f, 0x00, 0x00, 0x0a, 0x00, 0x1f, 0x00,
            0x05, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x2f, 0x00, 0x00, 0x00, 0x01, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x05, 0x00, 0x1f, 0x00,
            0x0a, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
            0x01, 0x10, 0x00, 0x00, 0x08, 0x00, 0x0f, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00,
            0x00, 0x00, 0x0f, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x0a, 0x00, 0x1f, 0x00,
            0x05, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x33, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x05, 0x00, 0x1f, 0x00,
            0x0a, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
            0x01, 0x10, 0x00, 0x00, 0x0a, 0x00, 0x1f, 0x00, 0x05, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x1f, 0x00,
            0x0f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00,
            0x00, 0x00, 0x1f, 0x00, 0x05, 0x00, 0x1f, 0x00, 0x0a, 0x00, 0x1f, 0x00, 0x0f, 0x00, 0x01, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x0b, 0x00, 0x1f, 0x00,
            0x05, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x37, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x05, 0x00, 0x3f, 0x00,
            0x0b, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
            0x01, 0x10, 0x00, 0x00, 0x08, 0x00, 0x0f, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00,
            0x0c, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00,
            0x00, 0x00, 0x0f, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x0f, 0x00, 0x0c, 0x00, 0x0f, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
            0x08, 0x00, 0xff, 0x00, 0x10, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x3b, 0x00, 0x00, 0x00, 0x01, 0x20, 0x00, 0x00, 0x14, 0x00, 0xff, 0x03, 0x0a, 0x00, 0xff, 0x03,
            0x00, 0x00, 0xff, 0x03, 0x1e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
            0x01, 0x20, 0x00, 0x00, 0x14, 0x00, 0xff, 0x03, 0x0a, 0x00, 0xff, 0x03, 0x00, 0x00, 0xff, 0x03,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x01, 0x20, 0x00, 0x00,
            0x00, 0x00, 0xff, 0x03, 0x0a, 0x00, 0xff, 0x03, 0x14, 0x00, 0xff, 0x03, 0x1e, 0x00, 0x03, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0xff, 0x03,
            0x0a, 0x00, 0xff, 0x03, 0x14, 0x00, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x07, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x18, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x22, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xc2, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xc4, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xc6, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xc8, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xc9, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xca, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xcc, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xce, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xd0, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xd2, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xd4, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xd6, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xd8, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xda, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xdb, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xdc, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xdd, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xde, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xe0, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xe2, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xe4, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xe6, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xe8, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xea, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xec, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xee, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xef, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xf0, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xf2, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xf4, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xf6, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xf8, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xfa, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xfc, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0xfe, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0x02, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0x04, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0x06, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0x08, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0x0a, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0x0c, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0x0e, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00
        ])

        reply = struct.pack(sc.endian + 'BBHL', 1, 0, sc.seqNo, (len(reply) - 24) // 4) + reply
        dumpHex('    <<<--- REPLY ', reply)
        sendToSrc(reply)

        ss.state = 'CLIENT_REQ_HEADER'
        stateArgs = (bytearray(),)
        return chunkLen
    #------------------------------------------------------------------------------------------------------------------
    stateActions = {
        'BYPASS':                                       onStateBypass,
        'WAIT_ALLOW_DATA':                              onStateWaitAllowData,
        'CLIENT_INIT':                                  onStateClientInit,
        'CLIENT_CONN_SETUP':                            onStateClientConnSetup,
        'CLIENT_REQ_HEADER':                            onStateClientReqHeader,
        'CLIENT_REQ':                                   onStateClientReq,
        'CLIENT_REQ_DUMP':                              onStateClientReqDump,
        'CLIENT_REQ_CREATE_WINDOW':                     onStateClientReqCreateWindow,
        'CLIENT_REQ_CHANGE_WINDOW_ATTRIBUTES':          onStateClientReqChangeWindowAttributes,
        'CLIENT_REQ_INTERN_ATOM':                       onStateClientReqInternAtom,
        'CLIENT_REQ_GET_PROPERTY':                      onStateClientReqGetProperty,
        'CLIENT_REQ_GET_INPUT_FOCUS':                   onStateClientReqGetInputFocus,
        'CLIENT_REQ_LIST_FONTS':                        onStateClientReqListFonts,
        'CLIENT_REQ_ALLOC_COLOR':                       onStateClientReqAllocColor,
        'CLIENT_REQ_QUERY_COLORS':                      onStateClientReqQueryColors,
        'CLIENT_REQ_QUERY_EXTENSION':                   onStateClientReqQueryExtension,
        'CLIENT_REQ_GET_KEYBOARD_MAPPING':              onStateClientReqGetKeyboardMapping,
        'CLIENT_REQ_GET_POINTER_MAPPING':               onStateClientReqGetPointerMapping,
        'CLIENT_REQ_GET_MODIFIER_MAPPING':              onStateClientReqGetModifierMapping,
        'CLIENT_REQ_EXT_XKEYBOARD':                     onStateClientReqExtXKeyboard,
        'CLIENT_REQ_EXT_XKEYBOARD_USE_EXTENSION':       onStateClientReqExtXKeyboardUseExtension,
        'CLIENT_REQ_EXT_XKEYBOARD_SELECT_EVENTS':       onStateClientReqExtXKeyboardSelectEvents,
        'CLIENT_REQ_EXT_XKEYBOARD_GET_CONTROLS':        onStateClientReqExtXKeyboardGetControls,
        'CLIENT_REQ_EXT_XKEYBOARD_GET_MAP':             onStateClientReqExtXKeyboardGetMap,
        'CLIENT_REQ_EXT_XKEYBOARD_GET_KBD_BY_NAME':     onStateClientReqExtXKeyboardGetKbdByName,
        'CLIENT_REQ_EXT_XFIXES':                        onStateClientReqExtXFixes,
        'CLIENT_REQ_EXT_XFIXES_QUERY_VERSION':          onStateClientReqExtXFixesQueryVersion,
        'CLIENT_REQ_EXT_XFIXES_SELECT_SELECTION_INPUT': onStateClientReqExtXFixesSelectSelectionInput,
        'CLIENT_REQ_EXT_RENDER':                        onStateClientReqExtRender,
        'CLIENT_REQ_EXT_RENDER_QUERY_VERSION':          onStateClientReqExtRenderQueryVersion,
        'CLIENT_REQ_EXT_RENDER_QUERY_PICT_FORMATS':     onStateClientReqExtRenderQueryPictFormats,
    }
    #------------------------------------------------------------------------------------------------------------------
    atomMap = {
        '_XKB_RULES_NAMES':            0x000000ed,
        'CLIPBOARD':                   0x000000f0,
        '_NET_WM_STATE':               0x00000101,
        '_NET_WM_STATE_FULLSCREEN':    0x00000102,
        'TARGETS':                     0x0000011a,
        'TEXT':                        0x0000011b,
        'UTF8_STRING':                 0x0000011c,
        'WM_COLORMAP_WINDOWS':         0x0000011e,
        'WM_DELETE_WINDOW':            0x0000011f,
        'WM_PROTOCOLS':                0x00000120,
        'NX_IDENTITY':                 0x0000012d,
        'WM_NX_READY':                 0x0000012e,
        'MCOPGLOBALS':                 0x0000012f,
        'NX_CUT_BUFFER_SERVER':        0x00000130,
        'NX_AGENT_SIGNATURE':          0x00000131,
        'NXDARWIN':                    0x00000132,
        'TIMESTAMP':                   0x00000133,
        'user-00-0000000000_stR_dp32': 0x00000134,
    }
    #------------------------------------------------------------------------------------------------------------------
    try:
        stateActions[ss.state](bytearray())
        while onReceive():
            pass
    except Exception as e:
        pass

    try:
        ss.sock.shutdown(socket.SHUT_RDWR)
        ss.sock.close()
    except:
        pass
#----------------------------------------------------------------------------------------------------------------------
with socket.socket(socket.AF_UNIX, socket.SOCK_STREAM) as sockListen:
    connSeqNo = 1

    try:
        os.unlink(X11_SOCK_PATH)
    except:
        pass

    sockListen.bind(X11_SOCK_PATH)
    sockListen.listen(1)
    sockConn, remoteAddr = sockListen.accept()
    sockConn.settimeout(2.0)

    commonState = buildNamedList('CommonState', {'endian': '', 'seqNo': 0, 'windowIDs': set()})
    clientState = buildNamedList('ClientState', {'sock': sockConn, 'state': 'CLIENT_INIT'})
    remoteAddrStr = '%s' % connSeqNo
    print('Connected from %s' % remoteAddrStr)
    uniPipe('[%s]' % remoteAddrStr, commonState, clientState, None)
    print('Disconnected %s' % remoteAddrStr)
#----------------------------------------------------------------------------------------------------------------------
